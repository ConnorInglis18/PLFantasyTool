{"version":3,"sources":["Cell.js","Table.js","Home.js","Header.js","backend/consts.js","UserTeam.js","backend/fixtures.js","backend/players.js","backend/bootstrap.js","backend/displays.js","backend/getFormData.js","App.js","serviceWorker.js","index.js"],"names":["Cell","weekArray","this","props","length","style","Object","assign","background","styles","tableData","darkgrey","doubleGame","doubleGameData","Component","height","width","textAlign","border","fontSize","display","alignItems","justifyContent","color","Table","createTable","keys","map","team","key","index","type","createHeaders","upcomingGameweek","headers","push","i","mappedHeaders","header","column","padding","flexFlow","overflowX","useStyles","makeStyles","theme","home","position","backgroundColor","palette","grey","common","white","marginBottom","spacing","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","overlay","top","bottom","right","left","homeContent","breakpoints","up","paddingRight","Home","classes","post","refreshData","Paper","className","image","src","alt","imageText","Grid","container","item","md","Typography","component","variant","gutterBottom","title","paragraph","description","Link","href","linkText","onClick","toolbar","borderBottom","divider","toolbarTitle","flex","toolbarSecondary","toolbarLink","flexShrink","Header","sections","Fragment","Toolbar","section","noWrap","BOOTSTRAP_URL","FIXTURES_URL","UserTeam","addPlayerToUserTeam","e","preventDefault","userTeams","state","currentTeam","currentTeamIndex","indexOf","target","id","setState","localStorage","setItem","JSON","stringify","removePlayerFromUserTeam","splice","handleTeamNameChange","teamName","value","handleTeamNameSubmit","newTeam","name","players","console","log","changeCurrentTeam","getItem","parse","defendersDisplay","attackersDisplay","allPlayersArray","values","sort","a","b","userTeamDisplay","userTeam","forEach","playerId","playerDisplay","teamId","element_type","onSubmit","onChange","teamInfo","teamButton","selectedTeam","newTeamForm","teamSelection","positionGroup","player","marginLeft","borderRadius","paddingBottom","float","paddingTop","marginTop","cursor","overflow","outline","updateTeamInfo","teams","responseObject","fetch","then","response","ok","Error","statusText","json","data","handleFixtures","catch","error","fixtures","fixture","isFinished","gameweek","parseInt","homeId","awayId","segment","homeScore","awayScore","handlePlayers","playerDict","handleCost","cost","lastIndex","toString","substring","handleEvents","weeks","week","handleTeams","teamDict","ColorBarsType","createDisplays","gfArray","gaArray","medianGf","medianGa","gfMaxDistanceFromMedian","Math","max","gaMaxDistanceFromMedian","defendersUpcomingFixtures","attackersUpcomingFixtures","defendersWeekArray","attackersWeekArray","oppId","oppGf","oppGa","defenderGameObject","getColor","attackerGameObject","goals","medianGoals","maxDistanceFromMedian","colorBarsType","lightness","sat","hue","abs","lightnessConstant","fetchData","updateTimes","now","Date","dateString","split","fixtureDate","backendData","newUpdateTimes","slice","isBackendDataStale","Promise","resolve","reject","App","selectView","event","view","showDisplay","imgText","refresh","renderDesktopScreen","CssBaseline","Container","maxWidth","res","Boolean","window","location","hostname","match","ReactDOM","render","displayUrl","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0eb2dc6.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Cell extends Component {\n  render() {\n    const {weekArray} = this.props;\n    if (weekArray.length === 1) { // regular gameweek\n      return (\n        <td\n          style={Object.assign({}, { background: weekArray[0][\"color\"] }, styles.tableData)}\n        >\n          {weekArray[0][\"value\"]}\n        </td>\n      )\n    } else if (weekArray.length === 0) { // no games\n      return (\n        <td\n          style={Object.assign({}, styles.darkgrey, styles.tableData)}\n        ></td>\n      )\n    } else { // double game week\n      return (\n        <td style={styles.doubleGame}>\n          <div style={Object.assign({}, { background: weekArray[0][\"color\"] }, styles.doubleGameData)}>\n            {weekArray[0][\"value\"]}\n          </div>\n          <div style={Object.assign({}, { background: weekArray[1][\"color\"] }, styles.doubleGameData)}>\n            {weekArray[1][\"value\"]}\n          </div>\n        </td>\n      )\n    }\n  }\n}\n\nexport default Cell;\n\nconst styles = {\n  tableData: {\n    height: \"4vh\",\n    width: \"2.2vw\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"1vw\",\n  },\n  doubleGame: {\n    border: \"1px solid black\",\n    width: \"2.2vw\",\n  },\n  doubleGameData: {\n    height: \"2vh\",\n    fontSize: \".75vw\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  darkgrey: {\n    background: \"darkgrey\",\n    color: \"darkgrey\",\n  },\n};\n","import React, { Component } from \"react\";\nimport Cell from './Cell';\n\nclass Table extends Component {\n  createTable = (display) => {\n    return Object.keys(display).map((team) => {\n      team = display[team];\n      return (\n        <tr key={team[\"short_name\"]}>\n          <td style={Object.assign({}, { background: team[\"goals\"][\"color\"] }, styles.tableData)} >\n            {team[\"goals\"][\"value\"]}\n          </td>\n          <th>{team[\"short_name\"]}</th>\n          {team[\"upcoming_fixtures\"].map((weekArray, index) => {\n            return (\n              <Cell\n                weekArray={weekArray}\n                key={`${team[\"short_name\"]}-${index}-${this.props.type}`}\n              />\n            )\n          })}\n        </tr>\n      );\n    });\n  };\n\n  createHeaders = (type, upcomingGameweek) => {\n    let headers = [];\n    (type === \"DEFENDERS\") ? headers.push(\"GA\") : headers.push(\"GF\");\n    \n    headers.push(\"Team\");\n    for (let i = upcomingGameweek; i < 39; ++i) {\n      i < 10 ? headers.push(\"0\" + i) : headers.push(i);\n    }\n    let mappedHeaders = headers.map((header) => {\n      return (\n        <th key={header} style={styles.column}>\n          {header}\n        </th>\n      );\n    });\n    return <tr>{mappedHeaders}</tr>;\n  };\n\n  render() {\n    return (\n      <div style={styles.background}>\n        <table>\n          <tbody>\n            {this.createHeaders(this.props.type, this.props.upcomingGameweek)}\n            {this.createTable(this.props.display)}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n\nconst styles = {\n  background: {\n    padding: \"2vh 2vw\",\n    display: \"flex\",\n    flexFlow: \"column no-wrap\",\n    alignItems: \"stretch\",\n    background: \"lightgrey\",\n    overflowX: \"auto\",\n  },\n  column: {\n    textAlign: \"center\",\n  },\n  tableData: {\n    height: \"4vh\",\n    width: \"2.2vw\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"1vw\",\n  },\n  doubleGame: {\n    border: \"1px solid black\",\n    width: \"2.2vw\",\n  },\n  doubleGameData: {\n    height: \"2vh\",\n    fontSize: \".75vw\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  darkgrey: {\n    background: \"darkgrey\",\n    color: \"darkgrey\",\n  },\n  // darkred: {\n  //   background: \"#ec2727\",\n  // },\n  // red: {\n  //   background: \"#f26666\",\n  // },\n  // lightred: {\n  //   background: \"#f9b5b5\",\n  // },\n  // grey: {\n  //   background: \"#EBEBE4\",\n  // },\n  // lightgreen: {\n  //   background: \"#6cea70\",\n  // },\n  // green: {\n  //   background: \"#1bc020\",\n  // },\n  // darkgreen: {\n  //   background: \"#169a1a\",\n  // },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles(theme => ({\n  home: {\n    position: 'relative',\n    backgroundColor: theme.palette.grey[800],\n    color: theme.palette.common.white,\n    marginBottom: theme.spacing(4),\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n  },\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    backgroundColor: 'rgba(0,0,0,.3)',\n  },\n  homeContent: {\n    position: 'relative',\n    padding: theme.spacing(3),\n    [theme.breakpoints.up('md')]: {\n      padding: theme.spacing(6),\n      paddingRight: 0,\n    },\n  },\n}));\n\nexport default function Home(props) {\n  const classes = useStyles();\n  const { post, refreshData } = props;\n\n  return (\n    <Paper className={classes.home} style={{ backgroundImage: `url(${post.image})` }}>\n      {/* Increase the priority of the hero background image */}\n      {<img style={{ display: 'none' }} src={post.image} alt={post.imageText} />}\n      <div className={classes.overlay} />\n      <Grid container>\n        <Grid item md={6}>\n          <div className={classes.homeContent}>\n            <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\n              {post.title}\n            </Typography>\n            <Typography variant=\"h5\" color=\"inherit\" paragraph>\n              {post.description}\n            </Typography>\n            <Link variant=\"subtitle1\" href=\"#\">\n              {post.linkText}\n            </Link>\n          </div>\n          <div className={classes.homeContent}>\n            <button onClick={refreshData}>\n              Refresh Data\n            </button>\n          </div>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nHome.propTypes = {\n  post: PropTypes.object,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\n// import Button from '@material-ui/core/Button';\n// import Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto',\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  // const { sections, title } = props;\n  const { sections } = props;\n\n  return (\n    <React.Fragment>\n      {/* <Toolbar className={classes.toolbar}>\n        <Button size=\"small\">Subscribe</Button>\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          color=\"inherit\"\n          align=\"center\"\n          noWrap\n          className={classes.toolbarTitle}\n        >\n          {title}\n        </Typography>\n        <Button variant=\"outlined\" size=\"small\">\n          Sign up\n        </Button>\n      </Toolbar> */}\n      <Toolbar component=\"nav\" variant=\"dense\" className={classes.toolbarSecondary}>\n        {sections.map(section => (\n          <Link\n            title={section.title}\n            color=\"inherit\"\n            noWrap\n            key={section.title}\n            variant=\"body2\"\n            href={\"#\"}\n            className={classes.toolbarLink}\n            onClick={section.onClick}\n          >\n            {section.title}\n          </Link>\n        ))}\n      </Toolbar>\n    </React.Fragment>\n  );\n}\n\nHeader.propTypes = {\n  sections: PropTypes.array,\n  title: PropTypes.string,\n};","export const BOOTSTRAP_URL = \"https://pl-fantasy-tool-cors.herokuapp.com/https://fantasy.premierleague.com/api/bootstrap-static/\";\nexport const FIXTURES_URL = \"https://pl-fantasy-tool-cors.herokuapp.com/https://fantasy.premierleague.com/api/fixtures/\";\nexport const UPDATE_TIMES_KEY = \"UPDATE_TIMES\";\nexport const TEAM_DATA_KEY = \"TEAM_DATA\";\nexport const BACKEND_DATA_KEY = \"BACKEND_DATA\";","import React, { Component } from \"react\";\nimport Cell from './Cell';\nimport { TEAM_DATA_KEY } from \"./backend/consts\"\nimport { withTheme } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\n// import PropTypes from \"prop-types\";\n\nclass UserTeam extends Component {\n  constructor(props) {\n    super(props); // if there is a line striked through super, it's a bug on VS Code side\n    this.state = {\n      userTeams: [],\n      currentTeamIndex: 0,\n      teamName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // get the userTeam from localStorage and set it as current state\n    let userTeams = localStorage.getItem(TEAM_DATA_KEY);\n    if (userTeams !== null) {\n      userTeams = JSON.parse(userTeams);\n      this.setState({\n        userTeams: userTeams\n      })\n    }\n  }\n\n  addPlayerToUserTeam = (e) => {\n    e.preventDefault();\n    let userTeams = this.state.userTeams;\n    const currentTeam = userTeams[this.state.currentTeamIndex];\n    const index = currentTeam[\"players\"].indexOf(e.target.id);\n    if (index === -1) { // make sure the player does not already exist in the current team\n      currentTeam[\"players\"].push(e.target.id);\n    }\n    userTeams[this.state.currentTeamIndex] = currentTeam\n    this.setState({\n      userTeams: userTeams\n    });\n    localStorage.setItem(TEAM_DATA_KEY, JSON.stringify(userTeams));\n  }\n\n  removePlayerFromUserTeam = (e) => {\n    e.preventDefault();\n    let userTeams = this.state.userTeams;\n    let currentTeam = userTeams[this.state.currentTeamIndex];\n    const index = currentTeam[\"players\"].indexOf(e.target.id);\n    if (index !== -1) { // make sure the item exists in list (it should)\n      currentTeam[\"players\"].splice(index, 1); // remove element\n    }\n    userTeams[this.state.currentTeamIndex] = currentTeam;\n    this.setState({\n      userTeams: userTeams\n    });\n    localStorage.setItem(TEAM_DATA_KEY, JSON.stringify(userTeams));\n  }\n\n  handleTeamNameChange = (e) => {\n    this.setState({\n      teamName: e.target.value\n    });\n  }\n  \n  handleTeamNameSubmit = (e) => {\n    e.preventDefault();\n    let userTeams = this.state.userTeams;\n    let newTeam = {\n      name: this.state.teamName,\n      players: []\n    };\n    console.log(newTeam);\n    userTeams.push(newTeam);\n    this.setState({\n      userTeams: userTeams,\n      teamName: \"\"\n    })\n    localStorage.setItem(TEAM_DATA_KEY, JSON.stringify(userTeams));\n  }\n\n  changeCurrentTeam = (index) => {\n    this.setState({\n      currentTeamIndex: index\n    })\n  }\n\n\n  render() {\n    const { players, defendersDisplay, attackersDisplay } = this.props;\n    const allPlayersArray = Object.values(players).sort((a, b) => a[\"element_type\"] - b[\"element_type\"] || b[\"total_points\"] - a[\"total_points\"]);\n    let userTeamDisplay = [[], [], [], []] // 4 arrays for 4 player types (goalkeepers = 1 / go in 0th array);\n    if (this.state.userTeams.length && defendersDisplay.length) {\n      let userTeam = this.state.userTeams[this.state.currentTeamIndex];\n      console.log(userTeam);\n      userTeam[\"players\"].forEach(playerId => {\n        let playerDisplay = {}\n        playerDisplay[\"player_id\"] = playerId\n        playerDisplay[\"web_name\"] = players[playerId][\"web_name\"];\n        let teamId = players[playerId][\"team_id\"];\n        playerDisplay[\"team_id\"] = teamId;\n        playerDisplay[\"total_points\"] = players[playerId][\"total_points\"];\n        playerDisplay[\"now_cost\"] = players[playerId][\"now_cost\"];\n        console.log(players[playerId]);\n        // TODO: Add jerseys and team logo\n        const element_type = players[playerId][\"element_type\"];\n        if (element_type <= 2) { // defender or goalie\n          playerDisplay[\"upcoming_fixtures\"] = defendersDisplay[teamId-1][\"upcoming_fixtures\"]; // -1 b/c pl uses 1-index\n        } else { // midfielder or forward\n          playerDisplay[\"upcoming_fixtures\"] = attackersDisplay[teamId-1][\"upcoming_fixtures\"]; // -1 b/c pl uses 1-index\n        }\n        // put the player in the proper position array (goalie element type 1 goes in 0th indexed array)\n        userTeamDisplay[element_type-1].push(playerDisplay); // -1 b/c pl uses 1-index\n      });\n    }\n\n    const headers = [\"GOALKEEPERS\", \"DEFENDERS\", \"MIDFIELDERS\", \"FORWARDS\"];\n    \n    return (\n      <div>\n        {\n          (this.state.userTeams.length === 0) ? \n          // TODO: create this into a popup\n          <div>\n            Create a team\n            <form onSubmit={this.handleTeamNameSubmit}>\n              <label>\n                Team name:\n                <input type=\"text\" name=\"teamName\" value={this.state.teamName} onChange={this.handleTeamNameChange} />\n              </label>\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n          </div> : \n          // if there are players in the user team, render the table\n          <>\n          <div style={styles.teamInfo}>\n            <div>\n              Teams:\n              {this.state.userTeams.map((team, index) => {\n                if (index === this.state.currentTeamIndex) {\n                  return (\n                    // TODO: Fix styling\n                    <button key={\"navbar-\" + team[\"name\"]} style={Object.assign({}, styles.teamButton, styles.selectedTeam)} onClick={() => this.changeCurrentTeam(index)}>\n                      {team[\"name\"]}\n                    </button>\n                  )\n                } else {\n                  return (\n                    // TODO: Fix styling\n                    <button key={\"navbar-\" + team[\"name\"]} style={styles.teamButton} onClick={() => this.changeCurrentTeam(index)}>\n                      {team[\"name\"]}\n                    </button>\n                  )\n                }\n              })}\n            </div>\n            <form style={styles.newTeamForm} onSubmit={this.handleTeamNameSubmit}>\n              <label>\n                Add New Team\n                <input type=\"text\" name=\"teamName\" value={this.state.teamName} onChange={this.handleTeamNameChange} />\n              </label>\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n          </div>\n          <div style={styles.teamSelection}>\n            {userTeamDisplay.map((positionGroup, index) => {\n              return (\n                <div key={headers[index]}>\n                  {headers[index]}\n                  <table>\n                    <tbody>\n                      {positionGroup.map((player) => {\n                        return (\n                          <tr key={player[\"player_id\"]}>\n                            <td style={{width: \"40px\"}}>{player[\"now_cost\"]}</td>\n                            <td style={{width: \"40px\"}}>{player[\"total_points\"]}</td>\n                            <th style={{width: \"110px\"}}>{player[\"web_name\"]}</th>\n                            {player[\"upcoming_fixtures\"].map((weekArray, index) => {\n                              return (\n                                <Cell\n                                  weekArray={weekArray}\n                                  key={`${player[\"web_name\"]}-${index}`}\n                                />\n                              )\n                            })}\n                            <td>\n                              <button style={{marginLeft: \"20px\", background: \"rgb(247, 166, 166)\", height: \"20px\", width: \"20px\", borderRadius: \"20px\"}} id={player[\"player_id\"]} onClick={this.removePlayerFromUserTeam}>\n                                -\n                              </button>\n                            </td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                  </table>\n                </div>\n              )\n            })}\n          </div>\n          {allPlayersArray.map((player) => {\n            return (\n              <div key={\"AllPlayers-\" + player[\"player_id\"]}>\n                <button style={{background: \"rgb(114, 235, 118)\", height: \"20px\", width: \"20px\", borderRadius: \"20px\"}} id={player[\"player_id\"]} onClick={this.addPlayerToUserTeam}>\n                + \n                </button>\n                {`   ${player[\"web_name\"]}      Total Points: ${player[\"total_points\"]}`}\n              </div>\n            )\n          })}\n          </>\n        }\n      </div>\n    )\n  }\n}\n\nexport default UserTeam;\n\nconst styles = {\n  teamInfo: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingBottom: 0,\n    marginBottom: 0,\n  },\n  newTeamForm: {\n    float: \"right\",\n  },\n  teamSelection: {\n    paddingTop: 0,\n    marginTop: 0,\n    background: \"lightgrey\",\n  },\n  teamButton: {\n    background: \"white\",\n    border: \"none\",\n    cursor:\"pointer\",\n    overflow: \"hidden\",\n    outline:\"none\",\n    marginLeft: \"2px\",\n    height: \"100%\",\n  },\n  selectedTeam: {\n    background: \"lightgrey\"\n  }\n}","import { FIXTURES_URL } from './consts';\n\nexport const updateTeamInfo = (teams, responseObject) => {\n  console.log(\"STARTING TO UPDATE TEAM INFO\");\n  return fetch(FIXTURES_URL)\n  .then((response) => {\n    if (!response.ok) throw Error(response.statusText);\n    return response.json();\n  })\n  .then((data) => {\n    return handleFixtures(data, teams, responseObject);\n  })\n  .catch((error) => console.log(error)); // eslint-disable-line no-console\n}\n\nconst handleFixtures = (fixtures, teams, responseObject) => {\n  console.log(\"STARTING TO HANDLE FIXTURES\");\n  for (let fixture in fixtures) {\n    fixture = fixtures[fixture];\n    const isFinished = fixture[\"finished\"];\n  \n    // if a match is postponed, the event will be null. We only want to add games that are being played\n    if (fixture[\"event\"] != null) {\n      const gameweek = parseInt(fixture[\"event\"]); // gameweek is 1-indexed, but so is upcomingGameweek\n      const homeId = fixture[\"team_h\"];\n      const awayId = fixture[\"team_a\"];\n      /* \n        If the gameweek of the fixture is before the upcoming gameweek,\n        add it to the previous matches segment. If not, add it to the future opponents segment.\n        Note: Just because gameweek < upcomingGameweek does not mean the game has been played yet.\n        If it is Saturday morning on gameweek 15, then upcomingGameweek will equal 16.\n        However, a majority of the games in gameweek 15 will not have been played yet.\n        I am using upcomingGameweek rather than currentGameweek because once the deadline has\n        passed for gameweek 15, an owner cannot change his team for that gameweek.\n        Only gameweek 16 and on is important in this example\n      */\n      const segment = gameweek < responseObject[\"upcoming_gameweek\"] ? \"previous_opponents\" : \"future_opponents\";\n\n      // add fixtures\n      teams[homeId][segment][gameweek].push(awayId);\n      teams[awayId][segment][gameweek].push(homeId);\n\n      // if the fixture is finished, add the scores for the two team's gf and ga\n      if (isFinished) {\n        const homeScore = fixture[\"team_h_score\"];\n        const awayScore = fixture[\"team_a_score\"];\n        teams[homeId][\"gf\"] += homeScore;\n        teams[homeId][\"ga\"] += awayScore;\n        teams[awayId][\"gf\"] += awayScore;\n        teams[awayId][\"ga\"] += homeScore;\n      }\n    }\n  }\n  return teams;\n};","export const handlePlayers = (players) => {\n  let playerDict = {};\n  for (let player in players) {\n    player = players[player];\n    playerDict[player[\"id\"]] = {\n      \"team_id\": player[\"team\"], // fixtures uses team instead of team_code\n      \"web_name\": player[\"web_name\"],\n      \"element_type\": player[\"element_type\"],\n      \"total_points\": player[\"total_points\"],\n      \"player_id\": player[\"id\"],\n      \"now_cost\": handleCost(player[\"now_cost\"]),\n    }\n  }\n  console.log(playerDict);\n  return playerDict;\n}\n\n// turn \"125\" into \"12.5\" or \"67\" into \"6.7\"\nfunction handleCost(cost) {\n  cost = cost.toString();\n  const lastIndex = cost.length - 1;\n  return cost.substring(0, lastIndex) + \".\" + cost.substring(lastIndex, cost.length);\n}","// for now, just returns the current gameweek (is_current = true)\n// the id of the gameweek is 1-indexed (1-38)\nexport const handleEvents = (weeks) => {\n  for (const week of weeks) {\n    if (week[\"is_next\"] === true) {\n      return week[\"id\"];\n    }\n  }\n  console.error(\"handleEvents has not found the current gameweek\");\n  console.error(\"I have not error handled the first or last week of the season as I'm not sure how FPL sends the data\");\n  return 1;\n}\n\nexport const handleTeams = (teams, upcomingGameweek) => {\n  let teamDict = {};\n  for (const team in teams) {\n    let teamId = teams[team][\"id\"];\n    teamDict[teamId] = {\n      \"team_id\": teamId,\n      \"short_name\": teams[team][\"short_name\"],\n      \"gf\": 0,\n      \"ga\": 0,\n      \"previous_opponents\": {},\n      \"future_opponents\": {}\n    };\n\n    // This will initialize all of the arrays to handle blank and double gameweeks\n    for (let i = 1; i < upcomingGameweek; ++i) {\n      teamDict[teamId][\"previous_opponents\"][i] = [];\n    }\n    for (let i = upcomingGameweek; i < 39; ++i) {\n      teamDict[teamId][\"future_opponents\"][i] = [];\n    }\n  }\n  return teamDict;\n}","import { BACKEND_DATA_KEY } from \"./consts\";\n\nconst ColorBarsType = {\n  HIGH_GOOD: 1,\n  LOW_GOOD: 2\n};\nconst greenHue = 122;\nconst greenSat = 75;\nconst maxGreenLightness = 75;\nconst minGreenLightness = 35;\nconst redHue = 0;\nconst redSat = 84;\nconst maxRedLightness = 85;\nconst minRedLightness = 54;\n\nexport const createDisplays = (teams, responseObject) => {\n  console.log(\"STARTING CREATE DISPLAYS\");\n  // create the goals for and goals against arrays using the teams object\n  let gfArray = [];\n  let gaArray = [];\n  for (const team in teams) {\n    gfArray.push(teams[team][\"gf\"]);\n    gaArray.push(teams[team][\"ga\"]);\n  }  \n  gfArray.sort((a, b) => a - b); // a - b sorts in ascending order (b - a for descending)\n  gaArray.sort((a, b) => a - b);\n  const medianGf = (gfArray[9] + gfArray[10]) / 2; // 20 teams so take the middle of 9th and 10th team (0-indexed)\n  const medianGa = (gaArray[9] + gaArray[10]) / 2;\n\n  // To create the constant factor for all displays,\n  // we need to first figure out the largest differnece between max/min and the respective median\n  const gfMaxDistanceFromMedian = Math.max(medianGf - gfArray[0], gfArray[19] - medianGf);\n  const gaMaxDistanceFromMedian = Math.max(medianGa - gaArray[0], gaArray[19] - medianGa);  \n\n  responseObject[\"defenders_display\"] = [];\n  responseObject[\"attackers_display\"] = [];\n\n  for (let team in teams) {\n    team = teams[team];\n\n    let defendersDisplay = {};\n    let attackersDisplay = {};\n\n    defendersDisplay[\"short_name\"] = team[\"short_name\"];\n    attackersDisplay[\"short_name\"] = team[\"short_name\"];\n\n    let defendersUpcomingFixtures = []; // used for defenders display\n    let attackersUpcomingFixtures = []; // used for attackers display\n    for (const week in team[\"future_opponents\"]) {\n      let defendersWeekArray = [];\n      let attackersWeekArray = [];\n      team[\"future_opponents\"][week].forEach(oppId => {\n        const oppGf = teams[oppId][\"gf\"];\n        const oppGa = teams[oppId][\"ga\"];\n        let defenderGameObject = {\n          \"value\": oppGf,\n          \"color\": getColor(oppGf, medianGf, gfMaxDistanceFromMedian, ColorBarsType.LOW_GOOD)\n        }\n        let attackerGameObject = {\n          \"value\": oppGa,\n          \"color\": getColor(oppGa, medianGa, gaMaxDistanceFromMedian, ColorBarsType.HIGH_GOOD)\n        }\n        defendersWeekArray.push(defenderGameObject);\n        attackersWeekArray.push(attackerGameObject);\n      })\n      defendersUpcomingFixtures.push(defendersWeekArray);\n      attackersUpcomingFixtures.push(attackersWeekArray);\n    }\n    defendersDisplay[\"upcoming_fixtures\"] = defendersUpcomingFixtures;\n    attackersDisplay[\"upcoming_fixtures\"] = attackersUpcomingFixtures;\n\n    defendersDisplay[\"goals\"] = {\n      \"value\": team[\"ga\"],\n      \"color\": getColor(team[\"ga\"], medianGa, gaMaxDistanceFromMedian, ColorBarsType.LOW_GOOD)\n    };\n    attackersDisplay[\"goals\"] = {\n      \"value\": team[\"gf\"],\n      \"color\": getColor(team[\"gf\"], medianGf, gfMaxDistanceFromMedian, ColorBarsType.HIGH_GOOD)\n    };\n\n    responseObject[\"defenders_display\"].push(defendersDisplay);\n    responseObject[\"attackers_display\"].push(attackersDisplay);\n  }\n  // write object to local storage / db\n  localStorage.setItem(BACKEND_DATA_KEY, JSON.stringify(responseObject));\n  return responseObject;\n}\n\nfunction getColor(goals, medianGoals, maxDistanceFromMedian, colorBarsType) {\n  let lightness;\n  let sat;\n  let hue;\n  if (Math.abs(medianGoals - goals) <= 0.5) { // color white\n    hue = 100;\n    sat = 100;\n    lightness = 100;\n  } else if ((goals > medianGoals && colorBarsType === ColorBarsType.HIGH_GOOD) ||\n      (goals < medianGoals && colorBarsType === ColorBarsType.LOW_GOOD)) { // color green\n    // close to median = close to white = maxGreenLightness\n    // far from median = darker color = minGreenLightness\n    // we need to figure out the value (lightnessConstant) at which the furthest value away from the median will achieve the darkest color we want\n    // maxGreenLightness - (lightnessConstant * medianDistance) = minGreenLightness\n    let lightnessConstant = (maxGreenLightness - minGreenLightness) / maxDistanceFromMedian;\n    hue = greenHue;\n    sat = greenSat;\n    lightness = maxGreenLightness - (Math.abs(goals - medianGoals) * lightnessConstant)\n  } else { // color red\n    let lightnessConstant = (maxRedLightness - minRedLightness) / maxDistanceFromMedian;\n    hue = redHue;\n    sat = redSat;\n    lightness = maxRedLightness - (Math.abs(goals - medianGoals) * lightnessConstant)\n  }\n  return `hsl(${hue}, ${sat}%, ${lightness}%)`\n}","import { updateTeamInfo } from './fixtures';\nimport { handlePlayers } from './players';\nimport { handleEvents, handleTeams } from './bootstrap';\nimport { createDisplays } from './displays';\nimport { BACKEND_DATA_KEY, BOOTSTRAP_URL, FIXTURES_URL, UPDATE_TIMES_KEY } from './consts';\n\nexport const fetchData = () => {\n  // Check if there is an UPDATE_TIMES array for the user\n  // this will be the array to determine whether the data is stale in the future\n  let updateTimes = localStorage.getItem(UPDATE_TIMES_KEY);\n  if (updateTimes === null) {\n    // if there is not an UPDATE_TIMES array, we need to generate one\n    updateTimes = createGameweekSchedule();\n  }\n\n  let backendData = localStorage.getItem(BACKEND_DATA_KEY);\n  // We need to call the api if we either don't have any backend data or the data is stale\n  if (backendData === null || isBackendDataStale(JSON.parse(updateTimes))) {\n    console.log(\"FETCHING BACKEND DATA\");\n    let responseObject = {};\n    return fetch(BOOTSTRAP_URL)\n    .then((response) => {\n      console.log(response)\n      if (!response.ok) throw Error(response.statusText);\n      return response.json();\n    })\n    .then((data) => {\n      console.log(data)\n      const upcomingGameweek = handleEvents(data[\"events\"]);\n      let teams = handleTeams(data[\"teams\"], upcomingGameweek);\n      responseObject[\"players\"] = handlePlayers(data[\"elements\"], upcomingGameweek);\n      responseObject[\"upcoming_gameweek\"] = upcomingGameweek;\n      return updateTeamInfo(teams, responseObject);\n    })\n    .then((teams) => {\n      return createDisplays(teams, responseObject);\n    })\n    .catch((error) => console.log(error))\n  } else { // if we already have data, we will return that data as the response object\n    return new Promise(function(resolve, reject) {\n      resolve(JSON.parse(backendData));\n      reject(refreshData);\n    })\n  }\n}\n\nfunction isBackendDataStale(updateTimes) {\n  let now = new Date();\n  const nextUpdate = new Date(updateTimes[0]);\n  if (nextUpdate > now) { // if we have not reached the next update time, the data is not stale\n    return false;\n  } else { // the data is stale\n    // remove all dates from updateTimes that are before now\n    // (there could be more than one date that needs to be removed if the user hasn't visited the site in awhile)\n    for (let i = 0; i < updateTimes.length; ++i) {\n      const testDate = new Date(updateTimes[i])\n      if (testDate > now) {\n        // remove all dates before i\n        let newUpdateTimes = updateTimes.slice(i, updateTimes.length)\n        localStorage.setItem(UPDATE_TIMES_KEY, JSON.stringify(newUpdateTimes))\n        break;\n      }\n    }\n    return true;\n  }\n}\n\nexport const refreshData = () => {\n  let responseObject = {};\n  return fetch(BOOTSTRAP_URL)\n  .then((response) => {\n    if (!response.ok) throw Error(response.statusText);\n    return response.json();\n  })\n  .then((data) => {\n    const upcomingGameweek = handleEvents(data[\"events\"]);\n    let teams = handleTeams(data[\"teams\"], upcomingGameweek);\n    responseObject[\"players\"] = handlePlayers(data[\"elements\"], upcomingGameweek);\n    responseObject[\"upcoming_gameweek\"] = upcomingGameweek;\n    return updateTeamInfo(teams, responseObject);\n  })\n  .then((teams) => {\n    return createDisplays(teams, responseObject);\n  })\n  .catch((error) => console.log(error))\n}\n\n// This function will create an array of all future gamedays\n// It will then store this array in local storage\n// This array will then be used to check whether or not to call the backend api\nfunction createGameweekSchedule() {\n  fetch(FIXTURES_URL)\n  .then((response) => {\n    if (!response.ok) throw Error(response.statusText);\n    return response.json();\n  })\n  .then((fixtures) => {\n    let updateTimes = {}\n    let now = new Date();\n    fixtures.forEach(fixture => {\n      if (fixture[\"kickoff_time\"] !== null) {\n        let dateString = fixture[\"kickoff_time\"];\n        // set the dateString to be 9:00pm of that day (the premier league site)\n        dateString = dateString.split(\"T\")[0] + \"T21:00:00\"\n        const fixtureDate = new Date(dateString)\n        if (fixtureDate > now) {\n          updateTimes[fixtureDate] = null // dictionary's are easier to work with than sets in js\n        }\n      }\n    })\n    localStorage.setItem(UPDATE_TIMES_KEY, JSON.stringify(Object.keys(updateTimes).sort((a, b) => Date(a) < Date(b))));\n    return Object.keys(updateTimes).sort((a, b) => Date(a) < Date(b))\n})}","import React, { Component } from \"react\";\nimport Table from \"./Table.js\";\nimport Home from \"./Home.js\";\nimport Header from \"./Header.js\";\nimport UserTeam from \"./UserTeam\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { fetchData } from './backend/getFormData';\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      defendersDisplay: [],\n      attackersDisplay: [],\n      players: {},\n      upcomingGameweek: 1,\n      view: \"Home\",\n    };\n  }\n\n  componentDidMount() {\n    fetchData().then(res => {\n      console.log(res);\n      this.setState({\n        defendersDisplay: res[\"defenders_display\"],\n        attackersDisplay: res[\"attackers_display\"],\n        upcomingGameweek: res[\"upcoming_gameweek\"],\n        players: res[\"players\"],\n        userTeams: res[\"user_teams\"]\n      });\n    })\n  }\n\n  selectView = (event) => {\n    event.preventDefault();\n    this.setState({\n      view: event.target.title,\n    });\n  };\n\n  showDisplay = () => {\n    const mainFeaturedPost = {\n      title: \"FPL Scheduling Tool\",\n      description:\n        \"This tool shows the goals for and against, rather than the opponent they are playing\",\n      image: \"PL_Banner.jpg\",\n      imgText: \"\",\n      linkText: \"\",\n    };\n\n    return this.state.view === \"Defenders\" ? (\n      <Table\n        display={this.state.defendersDisplay}\n        upcomingGameweek={this.state.upcomingGameweek}\n        type=\"DEFENDERS\"\n      />\n    ) : this.state.view === \"Attackers\" ? (\n      <Table\n        display={this.state.attackersDisplay}\n        upcomingGameweek={this.state.upcomingGameweek}\n        type=\"ATTACKERS\"\n      />\n    ) : this.state.view === \"Home\" ? (\n      <Home post={mainFeaturedPost} refreshData={this.refresh} />\n    ) : this.state.view === \"Team\" ? (\n      <UserTeam\n        players={this.state.players}\n        defendersDisplay={this.state.defendersDisplay}\n        attackersDisplay={this.state.attackersDisplay}\n      />\n    ) : (\n      <div>Error</div>\n    );\n  };\n\n  renderDesktopScreen = () => {\n    const sections = [\n      { title: \"Home\", onClick: this.selectView },\n      { title: \"Defenders\", onClick: this.selectView },\n      { title: \"Attackers\", onClick: this.selectView },\n      { title: \"Team\", onClick: this.selectView }\n    ];\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Container maxWidth=\"lg\">\n          <Header title=\"FPL Tool\" sections={sections} />\n          {this.showDisplay()}\n        </Container>\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    return this.renderDesktopScreen();\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nlet displayUrl = \"http://127.0.0.1:5000/mainDisplays\";\n\nReactDOM.render(\n  <App displayUrl={displayUrl} />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}