{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","getPlayers","playersDict","fetch","then","response","ok","Error","statusText","json","data","players","elements","player","catch","error","console","log","addGameInfo","game","info","homeTeam","teamCodesInverted","awayTeam","isFinished","gameweek","parseInt","homeTeamScore","awayTeamScore","getSchedule","fixtures","Array","fill","gf","ga","defendersDisplay","attackersDisplay","gfColors","gaColors","createAttackersDisplay","createDefendersDisplay","createColorBrackets","setState","canMakeSubsets","arr","k","inc","subsets","largestVal","i","length","makeSubsets","subset","push","Object","values","sort","maxGF","Math","max","apply","minGF","min","gfRange","ceil","tmp","maxGA","minGA","gaRange","keys","forEach","team","week","game1","game2","getColor","goals","colors","styles","darkred","red","grey","green","darkgreen","darkgrey","createTable","display","map","key","style","tableRow","index","assign","tableData","doubleGame","substring","createHeaders","headers","mappedHeaders","header","column","renderScreen","state","this","loadData","getPlayersResults","getScheduleResults","Component","justifyContent","height","width","textAlign","border","fontSize","background","color","yellow","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.983bc5df.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      fixtures: null,\n      gf: [],\n      ga: [],\n      playersDict: null,\n      defendersDisplay: [],\n      attackersDisplay: [],\n      gfColors: [],\n      gaColors: [],\n    }\n  }\n\n  componentDidMount() {\n    this.loadData()\n  }\n\n  loadData() {\n    const getPlayersResults = this.getPlayers()\n    const getScheduleResults = this.getSchedule()\n    const fixtures = getScheduleResults[\"fixtures\"]\n    const gf = getScheduleResults[\"gf\"]\n    const ga = getScheduleResults[\"ga\"]\n    const defendersDisplay = getScheduleResults[\"defendersDisplay\"]\n    const attackersDisplay = getScheduleResults[\"attackersDisplay\"]\n    const gfColors = getScheduleResults[\"gfColors\"]\n    const gaColors = getScheduleResults[\"gaColors\"]\n    this.setState({\n      playersDict: getPlayersResults,\n      fixtures: fixtures,\n      gf: gf,\n      ga: ga,\n      defendersDisplay: defendersDisplay,\n      attackersDisplay: attackersDisplay,\n      gfColors: gfColors,\n      gaColors: gaColors,\n    })\n  }\n\n  getPlayers = () => {\n    let playersDict = {}\n    fetch(\"https://cors-anywhere.herokuapp.com/https://fantasy.premierleague.com/api/bootstrap-static/\")\n    .then((response) => {\n      if (!response.ok) throw Error(response.statusText);\n          return response.json();\n      })\n    .then((data) => {\n      const players = data.elements // eslint-disable-next-line\n      for(const player of players) {\n        playersDict[player[\"id\"]] = player[\"web_name\"]\n      }\n    })\n    .catch(error => console.log(error)); // eslint-disable-line no-console \n    \n    return playersDict\n  }\n\n  // takes in a game and the previous info, which contains\n  // fixtures, gf, ga\n  // fixtures - dictionary of team keys, value is array of size 38 (for each match)\n  // gf, ga - dictionary of team keys, value is that teams gf and ga\n  addGameInfo = (game, info) => {\n    const homeTeam = teamCodesInverted[game[\"team_h\"]]\n    const awayTeam = teamCodesInverted[game[\"team_a\"]]\n    const isFinished = game[\"finished\"]\n    // gameweeks are 1-indexed so -1 is used to index into arrray's\n    const gameweek = parseInt(game[\"event\"])-1\n\n    if (info[\"fixtures\"][homeTeam][gameweek] === null) {\n      info[\"fixtures\"][homeTeam][gameweek] = [{\"opp\": awayTeam, \"isFinished\": isFinished}]\n    } else { // accounts for double gameweeks\n      info[\"fixtures\"][homeTeam][gameweek] = [info[\"fixtures\"][homeTeam][gameweek][0], {\"opp\": awayTeam, \"isFinished\": isFinished}]\n    }\n    \n    if (info[\"fixtures\"][awayTeam][gameweek] === null) {\n      info[\"fixtures\"][awayTeam][gameweek] = [{\"opp\": homeTeam, \"isFinished\": isFinished}]\n    } else { // accounts for double gameweeks\n      info[\"fixtures\"][awayTeam][gameweek] = [info[\"fixtures\"][awayTeam][gameweek][0], {\"opp\": homeTeam, \"isFinished\": isFinished}]\n    }\n    \n    // if the current game has been played, add the scores to the two team's\n    if(isFinished) {\n      const homeTeamScore = game[\"team_h_score\"]\n      const awayTeamScore = game[\"team_a_score\"]\n      info[\"gf\"][homeTeam] += homeTeamScore\n      info[\"ga\"][homeTeam] += awayTeamScore\n      info[\"gf\"][awayTeam] += awayTeamScore\n      info[\"ga\"][awayTeam] += homeTeamScore\n    }\n    return info\n  }\n\n  getSchedule = () => {\n    let info = {\n      fixtures: {\n        \"ARS\": new Array(38).fill(null),\n        \"AVL\": new Array(38).fill(null),\n        \"BOU\": new Array(38).fill(null),\n        \"BHA\": new Array(38).fill(null),\n        \"BUR\": new Array(38).fill(null),\n        \"CHE\": new Array(38).fill(null),\n        \"CRY\": new Array(38).fill(null),\n        \"EVE\": new Array(38).fill(null),\n        \"LEI\": new Array(38).fill(null),\n        \"LIV\": new Array(38).fill(null),\n        \"MCY\": new Array(38).fill(null),\n        \"MUN\": new Array(38).fill(null),\n        \"NEW\": new Array(38).fill(null),\n        \"NOR\": new Array(38).fill(null),\n        \"SHE\": new Array(38).fill(null),\n        \"SOU\": new Array(38).fill(null),\n        \"TOT\": new Array(38).fill(null),\n        \"WAT\": new Array(38).fill(null),\n        \"WHU\": new Array(38).fill(null),\n        \"WOL\": new Array(38).fill(null),\n      },\n      gf: {\n        \"ARS\": 0,\n        \"AVL\": 0,\n        \"BOU\": 0,\n        \"BHA\": 0,\n        \"BUR\": 0,\n        \"CHE\": 0,\n        \"CRY\": 0,\n        \"EVE\": 0,\n        \"LEI\": 0,\n        \"LIV\": 0,\n        \"MCY\": 0,\n        \"MUN\": 0,\n        \"NEW\": 0,\n        \"NOR\": 0,\n        \"SHE\": 0,\n        \"SOU\": 0,\n        \"TOT\": 0,\n        \"WAT\": 0,\n        \"WHU\": 0,\n        \"WOL\": 0\n      },\n      ga: {\n        \"ARS\": 0,\n        \"AVL\": 0,\n        \"BOU\": 0,\n        \"BHA\": 0,\n        \"BUR\": 0,\n        \"CHE\": 0,\n        \"CRY\": 0,\n        \"EVE\": 0,\n        \"LEI\": 0,\n        \"LIV\": 0,\n        \"MCY\": 0,\n        \"MUN\": 0,\n        \"NEW\": 0,\n        \"NOR\": 0,\n        \"SHE\": 0,\n        \"SOU\": 0,\n        \"TOT\": 0,\n        \"WAT\": 0,\n        \"WHU\": 0,\n        \"WOL\": 0\n      },\n      defendersDisplay: {},\n      attackersDisplay: {},\n      gfColors: [],\n      gaColors: [],\n    }\n    fetch(\"https://cors-anywhere.herokuapp.com/https://fantasy.premierleague.com/api/fixtures/\")\n    .then((response) => {\n      if (!response.ok) throw Error(response.statusText);\n          return response.json();\n      })\n    .then((data) => { // eslint-disable-next-line\n      for(const game of data) {\n        info = this.addGameInfo(game, info);\n      }\n      this.createAttackersDisplay(info)\n      this.createDefendersDisplay(info)\n      this.createColorBrackets(info)\n      this.setState({\n        gfColors: info[\"gfColors\"],\n        gaColors: info[\"gaColors\"],\n      })\n    })\n    .catch(error => console.log(error)); // eslint-disable-line no-console\n    return info;\n  }\n\n  canMakeSubsets = (arr, k, inc) => {\n    let subsets = 0\n    let largestVal = arr[0] + inc\n    for (let i = 0; i < arr.length; ++i) {\n      if (arr[i] > largestVal) {\n        subsets += 1\n        largestVal = arr[i] + inc\n      }\n    }\n    return subsets < k\n  }\n\n  makeSubsets = (arr, inc) => {\n    let subsets = []\n    let subset = []\n    subset.push(arr[0])\n    subset.push(arr[0]+inc)\n    subsets.push(subset)\n    let largestVal = arr[0] + inc\n    for (let i = 0; i < arr.length; ++i) {\n      if (arr[i] > largestVal) {\n        subset = []\n        subset.push(arr[i])\n        subset.push(arr[i]+inc)\n        subsets.push(subset)\n        largestVal = arr[i] + inc\n      }\n    }\n    return subsets\n  }\n\n  createColorBrackets = (info) => {\n    const numColors = 5\n    // gf colors\n    const gf = Object.values(info[\"gf\"]).sort()\n    // get max and min of gf array\n    const maxGF = Math.max.apply(null, gf)\n    const minGF = Math.min.apply(null, gf)\n    let gfRange = Math.ceil((maxGF - minGF) / numColors) + 1\n    while (this.canMakeSubsets(gf, numColors, gfRange-1)) {\n      gfRange -= 1\n    }\n    info[\"gfColors\"] = this.makeSubsets(gf, gfRange)\n    // reverse the ordering to make the colors easier to handle\n    let tmp = info[\"gfColors\"][0]\n    info[\"gfColors\"][0] = info[\"gfColors\"][4];\n    info[\"gfColors\"][4] = tmp;\n    tmp = info[\"gfColors\"][1]\n    info[\"gfColors\"][1] = info[\"gfColors\"][3];\n    info[\"gfColors\"][3] = tmp;\n    // // ga colors\n    const ga = Object.values(info[\"ga\"]).sort()\n    const maxGA = Math.max.apply(null, ga)\n    const minGA = Math.min.apply(null, ga)\n    let gaRange = Math.ceil((maxGA - minGA) / numColors) + 1\n    while (this.canMakeSubsets(ga, numColors, gaRange-1)) {\n      gaRange -= 1\n    }\n    info[\"gaColors\"] = this.makeSubsets(ga, gaRange)\n  }\n\n  createDefendersDisplay = (info) => {\n    const fixtures = info[\"fixtures\"]\n    const defendersDisplay = info[\"defendersDisplay\"]\n    const gf = info[\"gf\"]\n    Object.keys(fixtures).forEach(team => {\n      defendersDisplay[team] = new Array(38)\n      for (let week = 0; week < 38; ++week) {\n        if (fixtures[team][week] === null) {\n          defendersDisplay[team][week] = -1\n        }\n        else if (fixtures[team][week].length > 1) {\n          let game1 = fixtures[team][week][0][\"isFinished\"] ? -1 : gf[fixtures[team][week][0][\"opp\"]]\n          let game2 = fixtures[team][week][1][\"isFinished\"] ? -1 : gf[fixtures[team][week][1][\"opp\"]]\n          defendersDisplay[team][week] = game1 + \" \" + game2\n        }\n        else {\n          defendersDisplay[team][week] = fixtures[team][week][0][\"isFinished\"] ? -1 : gf[fixtures[team][week][0][\"opp\"]]\n        }\n      }\n    })\n  }\n\n  createAttackersDisplay = (info) => {\n    const fixtures = info[\"fixtures\"]\n    const attackersDisplay = info[\"attackersDisplay\"]\n    const ga = info[\"ga\"]\n    Object.keys(fixtures).forEach(team => {\n      attackersDisplay[team] = new Array(38)\n      for (let week = 0; week < 38; ++week) {\n        if (fixtures[team][week] === null) {\n          attackersDisplay[team][week] = -1\n        }\n        else if (fixtures[team][week].length > 1) {\n          let game1 = fixtures[team][week][0][\"isFinished\"] ? -1 : ga[fixtures[team][week][0][\"opp\"]]\n          let game2 = fixtures[team][week][1][\"isFinished\"] ? -1 : ga[fixtures[team][week][1][\"opp\"]]\n          attackersDisplay[team][week] = game1 + \" \" + game2\n        }\n        else {\n          attackersDisplay[team][week] = fixtures[team][week][0][\"isFinished\"] ? -1 : ga[fixtures[team][week][0][\"opp\"]]\n        }\n      }\n    })\n  }\n  \n  getColor = (goals, colors) => {\n    switch(true) {\n      case(colors[0][0] <= goals && goals <= colors[0][1]):\n        return styles.darkred\n      case(colors[1][0] <= goals && goals <= colors[1][1]):\n        return styles.red\n      case(colors[2][0] <= goals && goals <= colors[2][1]):\n        return styles.grey\n      case(colors[3][0] <= goals && goals <= colors[3][1]):\n        return styles.green\n      case(colors[4][0] <= goals && goals <= colors[4][1]):\n        return styles.darkgreen\n      default: // used if the number is -1\n        return styles.darkgrey\n    }\n  }\n \n  createTable = (colors, display) => {\n    return Object.keys(display).map(team => {\n      return (\n        <tr key={team} style={styles.tableRow}>\n          <th>{team}</th>\n          {display[team].map((goals,index) => {\n            return (typeof goals === \"number\") ?\n              (<td key={index} style={Object.assign({}, this.getColor(goals, colors),styles.tableData)}>\n                {goals}\n              </td>) :\n              (<td key={index} style={Object.assign({}, styles.tableData, styles.doubleGame)}>\n                <div style={this.getColor(parseInt(goals.substring(0,2)), colors)}>\n                  {goals.substring(0,2)}\n                </div>\n                <div style={this.getColor(parseInt(goals.substring(3,5)), colors)}>\n                  {goals.substring(3,5)}\n                </div>\n              </td>);\n          })}\n        </tr>\n      )\n    })\n  }\n\n  createHeaders = () => {\n    let headers = []\n    headers.push(\"TEAM\")\n    for (let i = 1; i < 39; ++i) {\n      i < 10 ? headers.push(\"0\" + i) : headers.push(i)\n    }\n    let mappedHeaders = headers.map(header => {\n      return <th key={header} style={styles.column}>{header}</th>\n    })\n    return (<tr>{mappedHeaders}</tr>)\n  }\n\n  renderScreen = () => {\n    return (\n      <div>\n        <div>\n          Used for Defense\n          <table>\n            <tbody>\n              {this.createHeaders()}\n              {this.createTable(this.state.gfColors, this.state.defendersDisplay)}\n            </tbody>\n          </table>\n        </div>\n        <div>\n          Used for Offense\n          <table>\n            <tbody>\n              {this.createHeaders()}\n              {this.createTable(this.state.gaColors, this.state.attackersDisplay)}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n\n  render () {\n    return (this.state.gfColors.length === 0 && this.state.attackersDisplay.length === 0 && this.state.defendersDisplay.length === 0)\n    ?\n    (<div>Loading Page...</div>)\n    :\n    this.renderScreen()\n  }\n}\n\nexport default App;\n\nconst styles = {\n  column: {\n    justifyContent: \"center\"\n  },\n  tableData: {\n    height: \"34px\",\n    width: \"30px\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \".9em\",\n  },\n  doubleGame: {\n    background: \"yellow\",\n    border: \"1px solid red\",\n  },\n  darkgrey: {\n    background: \"darkgrey\",\n    color: \"darkgrey\"\n  },\n  darkred: {\n    background: \"#861D46\",\n    color: \"white\",\n  },\n  red: {\n    background: \"#FF005A\",\n    color: \"white\",\n  },\n  grey: {\n    background: \"#EBEBE4\",\n  },\n  green: {\n    background: \"#00ff86\",\n  },\n  darkgreen: {\n    background: \"#02894E\",\n    color: \"white\",\n  },\n  yellow: {\n    background: \"yellow\",\n  },\n}\n\nlet teamCodesInverted = {\n  1: \"ARS\",\n  2: \"AVL\",\n  3: \"BOU\",\n  4: \"BHA\",\n  5: \"BUR\",\n  6: \"CHE\",\n  7: \"CRY\",\n  8: \"EVE\",\n  9: \"LEI\",\n  10: \"LIV\",\n  11: \"MCY\",\n  12: \"MUN\",\n  13: \"NEW\",\n  14: \"NOR\",\n  15: \"SHE\",\n  16: \"SOU\",\n  17: \"TOT\",\n  18: \"WAT\",\n  19: \"WHU\",\n  20: \"WOL\"\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}