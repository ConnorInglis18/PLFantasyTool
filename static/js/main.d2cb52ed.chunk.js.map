{"version":3,"sources":["Table.js","App.js","serviceWorker.js","index.js"],"names":["Table","props","getColor","goals","colors","styles","darkred","red","grey","green","darkgreen","darkgrey","createTable","display","Object","keys","map","team","key","index","style","assign","tableData","doubleGame","parseInt","substring","doubleGameData","createHeaders","headers","push","i","mappedHeaders","header","column","state","fixtures","gf","ga","playersDict","defendersDisplay","attackersDisplay","gfColors","gaColors","background","this","Component","padding","flexFlow","alignItems","textAlign","height","width","border","fontSize","justifyContent","color","App","getPlayers","fetch","then","response","ok","Error","statusText","json","data","players","elements","player","catch","error","console","log","addGameInfo","game","info","homeTeam","teamCodesInverted","awayTeam","isFinished","gameweek","homeTeamScore","awayTeamScore","getSchedule","Array","fill","createAttackersDisplay","createDefendersDisplay","createColorBrackets","setState","canMakeSubsets","arr","k","inc","subsets","largestVal","length","makeSubsets","subset","values","sort","maxGF","Math","max","apply","minGF","min","gfRange","ceil","tmp","maxGA","minGA","gaRange","forEach","week","game1","game2","showDefenders","e","view","showAttackers","showHome","showDisplay","renderScreen","Navbar","sticky","expand","bg","variant","Brand","onClick","Nav","className","Link","renderMobileScreen","isMobile","loadData","window","orientation","navigator","userAgent","indexOf","getPlayersResults","getScheduleResults","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2cb52ed.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      fixtures: null,\n      gf: [],\n      ga: [],\n      playersDict: null,\n      defendersDisplay: [],\n      attackersDisplay: [],\n      gfColors: [],\n      gaColors: [],\n    }\n  }\n\n  getColor = (goals, colors) => {\n    switch(true) {\n      case(colors[0][0] <= goals && goals <= colors[0][1]):\n        return styles.darkred\n      case(colors[1][0] <= goals && goals <= colors[1][1]):\n        return styles.red\n      case(colors[2][0] <= goals && goals <= colors[2][1]):\n        return styles.grey\n      case(colors[3][0] <= goals && goals <= colors[3][1]):\n        return styles.green\n      case(colors[4][0] <= goals && goals <= colors[4][1]):\n        return styles.darkgreen\n      default: // used if the number is -1\n        return styles.darkgrey\n    }\n  }\n \n  createTable = (colors, display) => {\n    return Object.keys(display).map(team => {\n      return (\n        <tr key={team}>\n          <th>{team}</th>\n          {display[team].map((goals,index) => {\n            return (typeof goals === \"number\") ?\n              (<td key={index} style={Object.assign({}, this.getColor(goals, colors),styles.tableData)}>\n                {goals}\n              </td>) :\n              (<td key={index} style={styles.doubleGame}>\n                <div style={Object.assign({}, this.getColor(parseInt(goals.substring(0,2)), colors), styles.doubleGameData)}>\n                  {goals.substring(0,2)}\n                </div>\n                <div style={Object.assign({}, this.getColor(parseInt(goals.substring(3,5)), colors), styles.doubleGameData)}>\n                  {goals.substring(3,5)}\n                </div>\n              </td>);\n          })}\n        </tr>\n      )\n    })\n  }\n\n  createHeaders = () => {\n    let headers = []\n    headers.push(\"\")\n    for (let i = 1; i < 39; ++i) {\n      i < 10 ? headers.push(\"0\" + i) : headers.push(i)\n    }\n    let mappedHeaders = headers.map(header => {\n      return <th key={header} style={styles.column}>{header}</th>\n    })\n    return (<tr>{mappedHeaders}</tr>)\n  }\n\n  render() {\n    return (\n      <div style={styles.background}>\n        <table>\n          <tbody>\n            {this.createHeaders()}\n            {this.createTable(this.props.colors, this.props.display)}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default Table;\n\nconst styles = {\n  background: {\n    padding: \"2vh 2vw\",\n    display: \"flex\",\n    flexFlow: \"column no-wrap\",\n    alignItems: \"stretch\",\n    background: \"lightgrey\",\n  },\n  column: {\n    textAlign: \"center\",\n  },\n  tableData: {\n    height: \"4vh\",\n    width: \"2.2vw\",\n    textAlign: \"center\",\n    border: \"1px solid black\",\n    fontSize: \"1vw\",\n  },\n  doubleGame: {\n    border: \"1px solid black\",\n    width: \"2.2vw\",\n  },\n  doubleGameData: {\n    height: \"2vh\",\n    fontSize: \".75vw\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  darkgrey: {\n    background: \"darkgrey\",\n    color: \"darkgrey\"\n  },\n  darkred: {\n    background: \"#861D46\",\n    color: \"white\",\n  },\n  red: {\n    background: \"#FF005A\",\n    color: \"white\",\n  },\n  grey: {\n    background: \"#EBEBE4\",\n  },\n  green: {\n    background: \"#00ff86\",\n  },\n  darkgreen: {\n    background: \"#02894E\",\n    color: \"white\",\n  },\n}","import React, { Component } from 'react';\nimport Table from './Table.js';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      fixtures: null,\n      gf: [],\n      ga: [],\n      playersDict: null,\n      defendersDisplay: [],\n      attackersDisplay: [],\n      gfColors: [],\n      gaColors: [],\n      view: \"Home\",\n      isMobile: false,\n    }\n  }\n\n  componentDidMount() {\n    this.loadData()\n    let isMobile = (typeof window.orientation !== \"undefined\") || (navigator.userAgent.indexOf('IEMobile') !== -1);\n    this.setState({\n      isMobile: isMobile,\n    })\n  }\n\n  loadData() {\n    const getPlayersResults = this.getPlayers()\n    const getScheduleResults = this.getSchedule()\n    const fixtures = getScheduleResults[\"fixtures\"]\n    const gf = getScheduleResults[\"gf\"]\n    const ga = getScheduleResults[\"ga\"]\n    const defendersDisplay = getScheduleResults[\"defendersDisplay\"]\n    const attackersDisplay = getScheduleResults[\"attackersDisplay\"]\n    const gfColors = getScheduleResults[\"gfColors\"]\n    const gaColors = getScheduleResults[\"gaColors\"]\n    this.setState({\n      playersDict: getPlayersResults,\n      fixtures: fixtures,\n      gf: gf,\n      ga: ga,\n      defendersDisplay: defendersDisplay,\n      attackersDisplay: attackersDisplay,\n      gfColors: gfColors,\n      gaColors: gaColors,\n    })\n  }\n\n  getPlayers = () => {\n    let playersDict = {}\n    fetch(\"https://cors-anywhere.herokuapp.com/https://fantasy.premierleague.com/api/bootstrap-static/\")\n    .then((response) => {\n      if (!response.ok) throw Error(response.statusText);\n          return response.json();\n      })\n    .then((data) => {\n      const players = data.elements // eslint-disable-next-line\n      for(const player of players) {\n        playersDict[player[\"id\"]] = player[\"web_name\"]\n      }\n    })\n    .catch(error => console.log(error)); // eslint-disable-line no-console \n    \n    return playersDict\n  }\n\n  // takes in a game and the previous info, which contains\n  // fixtures, gf, ga\n  // fixtures - dictionary of team keys, value is array of size 38 (for each match)\n  // gf, ga - dictionary of team keys, value is that teams gf and ga\n  addGameInfo = (game, info) => {\n    const homeTeam = teamCodesInverted[game[\"team_h\"]]\n    const awayTeam = teamCodesInverted[game[\"team_a\"]]\n    const isFinished = game[\"finished\"]\n    // gameweeks are 1-indexed so -1 is used to index into arrray's\n    const gameweek = parseInt(game[\"event\"])-1\n\n    if (info[\"fixtures\"][homeTeam][gameweek] === null) {\n      info[\"fixtures\"][homeTeam][gameweek] = [{\"opp\": awayTeam, \"isFinished\": isFinished}]\n    } else { // accounts for double gameweeks\n      info[\"fixtures\"][homeTeam][gameweek] = [info[\"fixtures\"][homeTeam][gameweek][0], {\"opp\": awayTeam, \"isFinished\": isFinished}]\n    }\n    \n    if (info[\"fixtures\"][awayTeam][gameweek] === null) {\n      info[\"fixtures\"][awayTeam][gameweek] = [{\"opp\": homeTeam, \"isFinished\": isFinished}]\n    } else { // accounts for double gameweeks\n      info[\"fixtures\"][awayTeam][gameweek] = [info[\"fixtures\"][awayTeam][gameweek][0], {\"opp\": homeTeam, \"isFinished\": isFinished}]\n    }\n    \n    // if the current game has been played, add the scores to the two team's\n    if(isFinished) {\n      const homeTeamScore = game[\"team_h_score\"]\n      const awayTeamScore = game[\"team_a_score\"]\n      info[\"gf\"][homeTeam] += homeTeamScore\n      info[\"ga\"][homeTeam] += awayTeamScore\n      info[\"gf\"][awayTeam] += awayTeamScore\n      info[\"ga\"][awayTeam] += homeTeamScore\n    }\n    return info\n  }\n\n  getSchedule = () => {\n    let info = {\n      fixtures: {\n        \"ARS\": new Array(38).fill(null),\n        \"AVL\": new Array(38).fill(null),\n        \"BOU\": new Array(38).fill(null),\n        \"BHA\": new Array(38).fill(null),\n        \"BUR\": new Array(38).fill(null),\n        \"CHE\": new Array(38).fill(null),\n        \"CRY\": new Array(38).fill(null),\n        \"EVE\": new Array(38).fill(null),\n        \"LEI\": new Array(38).fill(null),\n        \"LIV\": new Array(38).fill(null),\n        \"MCY\": new Array(38).fill(null),\n        \"MUN\": new Array(38).fill(null),\n        \"NEW\": new Array(38).fill(null),\n        \"NOR\": new Array(38).fill(null),\n        \"SHE\": new Array(38).fill(null),\n        \"SOU\": new Array(38).fill(null),\n        \"TOT\": new Array(38).fill(null),\n        \"WAT\": new Array(38).fill(null),\n        \"WHU\": new Array(38).fill(null),\n        \"WOL\": new Array(38).fill(null),\n      },\n      gf: {\n        \"ARS\": 0,\n        \"AVL\": 0,\n        \"BOU\": 0,\n        \"BHA\": 0,\n        \"BUR\": 0,\n        \"CHE\": 0,\n        \"CRY\": 0,\n        \"EVE\": 0,\n        \"LEI\": 0,\n        \"LIV\": 0,\n        \"MCY\": 0,\n        \"MUN\": 0,\n        \"NEW\": 0,\n        \"NOR\": 0,\n        \"SHE\": 0,\n        \"SOU\": 0,\n        \"TOT\": 0,\n        \"WAT\": 0,\n        \"WHU\": 0,\n        \"WOL\": 0\n      },\n      ga: {\n        \"ARS\": 0,\n        \"AVL\": 0,\n        \"BOU\": 0,\n        \"BHA\": 0,\n        \"BUR\": 0,\n        \"CHE\": 0,\n        \"CRY\": 0,\n        \"EVE\": 0,\n        \"LEI\": 0,\n        \"LIV\": 0,\n        \"MCY\": 0,\n        \"MUN\": 0,\n        \"NEW\": 0,\n        \"NOR\": 0,\n        \"SHE\": 0,\n        \"SOU\": 0,\n        \"TOT\": 0,\n        \"WAT\": 0,\n        \"WHU\": 0,\n        \"WOL\": 0\n      },\n      defendersDisplay: {},\n      attackersDisplay: {},\n      gfColors: [],\n      gaColors: [],\n    }\n    fetch(\"https://cors-anywhere.herokuapp.com/https://fantasy.premierleague.com/api/fixtures/\")\n    .then((response) => {\n      if (!response.ok) throw Error(response.statusText);\n          return response.json();\n      })\n    .then((data) => { // eslint-disable-next-line\n      for(const game of data) {\n        info = this.addGameInfo(game, info);\n      }\n      this.createAttackersDisplay(info)\n      this.createDefendersDisplay(info)\n      this.createColorBrackets(info)\n      this.setState({\n        gfColors: info[\"gfColors\"],\n        gaColors: info[\"gaColors\"],\n      })\n    })\n    .catch(error => console.log(error)); // eslint-disable-line no-console\n    return info;\n  }\n\n  canMakeSubsets = (arr, k, inc) => {\n    let subsets = 0\n    let largestVal = arr[0] + inc\n    for (let i = 0; i < arr.length; ++i) {\n      if (arr[i] > largestVal) {\n        subsets += 1\n        largestVal = arr[i] + inc\n      }\n    }\n    return subsets < k\n  }\n\n  makeSubsets = (arr, inc) => {\n    let subsets = []\n    let subset = []\n    subset.push(arr[0])\n    subset.push(arr[0]+inc)\n    subsets.push(subset)\n    let largestVal = arr[0] + inc\n    for (let i = 0; i < arr.length; ++i) {\n      if (arr[i] > largestVal) {\n        subset = []\n        subset.push(arr[i])\n        subset.push(arr[i]+inc)\n        subsets.push(subset)\n        largestVal = arr[i] + inc\n      }\n    }\n    return subsets\n  }\n\n  createColorBrackets = (info) => {\n    const numColors = 5\n    // gf colors\n    const gf = Object.values(info[\"gf\"]).sort()\n    // get max and min of gf array\n    const maxGF = Math.max.apply(null, gf)\n    const minGF = Math.min.apply(null, gf)\n    let gfRange = Math.ceil((maxGF - minGF) / numColors) + 1\n    while (this.canMakeSubsets(gf, numColors, gfRange-1)) {\n      gfRange -= 1\n    }\n    info[\"gfColors\"] = this.makeSubsets(gf, gfRange)\n    // reverse the ordering to make the colors easier to handle\n    let tmp = info[\"gfColors\"][0]\n    info[\"gfColors\"][0] = info[\"gfColors\"][4];\n    info[\"gfColors\"][4] = tmp;\n    tmp = info[\"gfColors\"][1]\n    info[\"gfColors\"][1] = info[\"gfColors\"][3];\n    info[\"gfColors\"][3] = tmp;\n    // // ga colors\n    const ga = Object.values(info[\"ga\"]).sort()\n    const maxGA = Math.max.apply(null, ga)\n    const minGA = Math.min.apply(null, ga)\n    let gaRange = Math.ceil((maxGA - minGA) / numColors) + 1\n    while (this.canMakeSubsets(ga, numColors, gaRange-1)) {\n      gaRange -= 1\n    }\n    info[\"gaColors\"] = this.makeSubsets(ga, gaRange)\n  }\n\n  createDefendersDisplay = (info) => {\n    const fixtures = info[\"fixtures\"]\n    const defendersDisplay = info[\"defendersDisplay\"]\n    const gf = info[\"gf\"]\n    Object.keys(fixtures).forEach(team => {\n      defendersDisplay[team] = new Array(38)\n      for (let week = 0; week < 38; ++week) {\n        if (fixtures[team][week] === null) {\n          defendersDisplay[team][week] = -1\n        }\n        else if (fixtures[team][week].length > 1) {\n          let game1 = fixtures[team][week][0][\"isFinished\"] ? -1 : gf[fixtures[team][week][0][\"opp\"]]\n          let game2 = fixtures[team][week][1][\"isFinished\"] ? -1 : gf[fixtures[team][week][1][\"opp\"]]\n          defendersDisplay[team][week] = game1 + \" \" + game2\n        }\n        else {\n          defendersDisplay[team][week] = fixtures[team][week][0][\"isFinished\"] ? -1 : gf[fixtures[team][week][0][\"opp\"]]\n        }\n      }\n    })\n  }\n\n  createAttackersDisplay = (info) => {\n    const fixtures = info[\"fixtures\"]\n    const attackersDisplay = info[\"attackersDisplay\"]\n    const ga = info[\"ga\"]\n    Object.keys(fixtures).forEach(team => {\n      attackersDisplay[team] = new Array(38)\n      for (let week = 0; week < 38; ++week) {\n        if (fixtures[team][week] === null) {\n          attackersDisplay[team][week] = -1\n        }\n        else if (fixtures[team][week].length > 1) {\n          let game1 = fixtures[team][week][0][\"isFinished\"] ? -1 : ga[fixtures[team][week][0][\"opp\"]]\n          let game2 = fixtures[team][week][1][\"isFinished\"] ? -1 : ga[fixtures[team][week][1][\"opp\"]]\n          attackersDisplay[team][week] = game1 + \" \" + game2\n        }\n        else {\n          attackersDisplay[team][week] = fixtures[team][week][0][\"isFinished\"] ? -1 : ga[fixtures[team][week][0][\"opp\"]]\n        }\n      }\n    })\n  }\n\n  showDefenders = (e) => {\n    this.setState({\n      view: \"Defenders\",\n    })\n  }\n\n  showAttackers = (e) => {\n    this.setState({\n      view: \"Attackers\",\n    })\n  }\n  \n  showHome = (e) => {\n    this.setState({\n      view: \"Home\",\n    })\n  }\n\n  showDisplay = () => {\n    return this.state.view === \"Defenders\" ?\n      (<Table colors={this.state.gfColors} display={this.state.defendersDisplay} />) :\n      this.state.view === \"Attackers\" ?\n        (<Table colors={this.state.gaColors} display={this.state.attackersDisplay} />) :\n        this.state.view === \"Home\" ?\n        (<div>Welcome to the Premier League Fantasy Tool Website by Connor Inglis </div>) :\n        (<div>Loading...</div>)\n  }\n\n  renderScreen = () => {\n    return (\n      <div>\n        <Navbar sticky=\"top\" expand=\"lg\" bg=\"light\" variant=\"light\">\n          <Navbar.Brand onClick={this.showHome}>Premier League Fantasy Tool</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link onClick={this.showDefenders}>Defenders</Nav.Link>\n            <Nav.Link onClick={this.showAttackers}>Attackers</Nav.Link>\n          </Nav>\n        </Navbar>\n        {this.showDisplay()}\n      </div>\n    )\n  }\n\n  renderMobileScreen = () => {\n    return (<div>ON MOBILE</div>)\n  }\n\n  render () {\n    return this.state.isMobile ?\n      this.renderMobileScreen() :\n      this.renderScreen()\n  }\n}\n\nexport default App;\n\nlet teamCodesInverted = {\n  1: \"ARS\",\n  2: \"AVL\",\n  3: \"BOU\",\n  4: \"BHA\",\n  5: \"BUR\",\n  6: \"CHE\",\n  7: \"CRY\",\n  8: \"EVE\",\n  9: \"LEI\",\n  10: \"LIV\",\n  11: \"MCY\",\n  12: \"MUN\",\n  13: \"NEW\",\n  14: \"NOR\",\n  15: \"SHE\",\n  16: \"SOU\",\n  17: \"TOT\",\n  18: \"WAT\",\n  19: \"WHU\",\n  20: \"WOL\"\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}